//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zongsoft.Plugins.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zongsoft.Plugins.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 查找指定插件路径的命令。 的本地化字符串。
        /// </summary>
        internal static string Text_FindCommand_Description {
            get {
                return ResourceManager.GetString("Text.FindCommand.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 插件查找命令 的本地化字符串。
        /// </summary>
        internal static string Text_FindCommand_Name {
            get {
                return ResourceManager.GetString("Text.FindCommand.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 显示目标对象成员的最大深度，默认是3。 的本地化字符串。
        /// </summary>
        internal static string Text_FindCommand_Options_Depth {
            get {
                return ResourceManager.GetString("Text.FindCommand.Options.Depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 获取指定插件树节点的内容值的获取方式，默认是不解析(never)。 的本地化字符串。
        /// </summary>
        internal static string Text_FindCommand_Options_ObtainMode {
            get {
                return ResourceManager.GetString("Text.FindCommand.Options.ObtainMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 逐级显示当前应用程序中的所有插件信息。 的本地化字符串。
        /// </summary>
        internal static string Text_ListCommand_Description {
            get {
                return ResourceManager.GetString("Text.ListCommand.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 插件列表命令 的本地化字符串。
        /// </summary>
        internal static string Text_ListCommand_Name {
            get {
                return ResourceManager.GetString("Text.ListCommand.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 指定了太多的命令参数。 的本地化字符串。
        /// </summary>
        internal static string Text_Message_CommandArgumentsTooMany {
            get {
                return ResourceManager.GetString("Text.Message.CommandArgumentsTooMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 无效的命令参数，传入给{0}命令的参数不是一个期望的类型或值。 的本地化字符串。
        /// </summary>
        internal static string Text_Message_InvalidCommandParameter {
            get {
                return ResourceManager.GetString("Text.Message.InvalidCommandParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 没有指定命令参数，请至少指定一个命令参数。 的本地化字符串。
        /// </summary>
        internal static string Text_Message_MissingCommandArguments {
            get {
                return ResourceManager.GetString("Text.Message.MissingCommandArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 指定的&apos;{0}‘插件路径是不存在的。 的本地化字符串。
        /// </summary>
        internal static string Text_Message_PluginNodeNotFound {
            get {
                return ResourceManager.GetString("Text.Message.PluginNodeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 逐级显示当前应用程序插件树节点的信息。 的本地化字符串。
        /// </summary>
        internal static string Text_TreeCommand_Description {
            get {
                return ResourceManager.GetString("Text.TreeCommand.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 插件树信息命令 的本地化字符串。
        /// </summary>
        internal static string Text_TreeCommand_Name {
            get {
                return ResourceManager.GetString("Text.TreeCommand.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 显示插件树的最大深度，默认是3。 的本地化字符串。
        /// </summary>
        internal static string Text_TreeCommand_Options_Depth {
            get {
                return ResourceManager.GetString("Text.TreeCommand.Options.Depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 显示插件树节点的完整全路径。 的本地化字符串。
        /// </summary>
        internal static string Text_TreeCommand_Options_Path {
            get {
                return ResourceManager.GetString("Text.TreeCommand.Options.Path", resourceCulture);
            }
        }
    }
}
